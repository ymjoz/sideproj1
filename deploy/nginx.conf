events {
    worker_connections  1024;
}

http {
    upstream backend {
        # server 3-3-joint-defense-platform-api:80;
        server backend-api:80;
    }

    upstream frontend {
        # server jointdefense-ui-dev:80;
        server frontend-ui:3000;
    }

    # 將所有 HTTP 請求重定向到 HTTPS
    server {
        listen 80 default_server;
        server_name _;

        # 用於 Certbot 的 ACME 挑戰，避免重定向到 HTTPS
        location ~ /.well-known/acme-challenge {
            root /var/www/certbot;
            allow all;
        }

        # # 其他所有請求重定向到 HTTPS
        # location / {
        #     return 301 https://$host$request_uri;
        # }
        location / {
            # if ($maintenance = 1) {
            #     return 503;
            # }
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            proxy_pass http://frontend;

            # 更精確地替換所有重定向中的內部端口，避免從 :3000 重定向
            proxy_redirect http://frontend:3000/ http://air.helenfit.com/;
            proxy_redirect http://air.helenfit.com:3000/ http://air.helenfit.com/;

            # 確保主機頭設置為正確的外部域名
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }

    # server {
    #     listen 443 ssl;
    #     ssl_certificate /etc/letsencrypt/live/rag.helenfit.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/rag.helenfit.com/privkey.pem;
    #     server_name rag.helenfit.com;

    #     # Global CORS settings
    #     add_header 'Access-Control-Allow-Origin' '*' always;
    #     add_header 'Access-Control-Allow-Credentials' 'true' always;
    #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    #     add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

    #     # Maintenance mode check
    #     set $maintenance 0;

    #     # 前端服務代理
    #     location / {
    #         if ($maintenance = 1) {
    #             return 503;
    #         }

    #         if ($request_method = 'OPTIONS') {
    #             add_header 'Access-Control-Max-Age' 1728000;
    #             add_header 'Content-Type' 'text/plain charset=UTF-8';
    #             add_header 'Content-Length' 0;
    #             return 204;
    #         }

    #         # 修正來自前端應用的 HTTP 重定向為 HTTPS 並避免端口號
    #         proxy_pass http://frontend;

    #         # 更精確地替換所有重定向中的內部端口，避免從 :3000 重定向
    #         proxy_redirect http://frontend/ https://air.helenfit.com/;
    #         proxy_redirect http://air.helenfit.com:3000/ http://air.helenfit.com/;
    #         proxy_redirect http:// https://;

    #         # 確保主機頭設置為正確的外部域名
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    #     # 後端 API 代理
    #     location /v1 {
    #         if ($maintenance = 1) {
    #             return 503;
    #         }

    #         if ($request_method = 'OPTIONS') {
    #             add_header 'Access-Control-Max-Age' 1728000;
    #             add_header 'Content-Type' 'text/plain charset=UTF-8';
    #             add_header 'Content-Length' 0;
    #             return 204;
    #         }

    #         # 修正來自後端 API 的 HTTP 重定向為 HTTPS
    #         proxy_pass http://backend;
    #         proxy_redirect http:// https://;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    #     # MongoDB 代理
    #     location /db {
    #         if ($maintenance = 1) {
    #             return 503;
    #         }

    #         if ($request_method = 'OPTIONS') {
    #             add_header 'Access-Control-Max-Age' 1728000;
    #             add_header 'Content-Type' 'text/plain charset=UTF-8';
    #             add_header 'Content-Length' 0;
    #             return 204;
    #         }

    #         proxy_pass http://mongo:27017;
    #     }

    #     # 503 錯誤頁面
    #     error_page 503 /maintenance.html;
    #     location = /maintenance.html {
    #         root /usr/share/nginx/html;
    #         internal;
    #     }
    # }
}
